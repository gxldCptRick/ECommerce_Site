@model ECommerceSite.DAL.Models.Product

@{
    ViewBag.Title = "ProductEditor";
}
<div class="purple offset">
    <h2>ProductEditor</h2>
    <form method="post" action="@ViewBag.PostUrl" id="form">
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            <h4>Product</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(m => m.Id)
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Cost, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Cost, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ImageUrl, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Summary, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Summary, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Summary, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <div class="flex" id="added-detail-container">
                        @if (Model != null)
                        {
                            foreach (var detail in Model.Details)
                            {
                                <input class="detail-added" value="@detail" type="text" />
                            }
                        }
                    </div>
                    <div>
                        <input type="text" value="" id="detail-input" />
                        <button type="button" id="detail-btn">Add Detail</button>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="product-delete" /> |
                    @if (ViewBag.IsCreate)
                    {
                        @Html.ActionLink("Back to Catalog", "Catalog")
                    }
                    else
                    {
                        @Html.ActionLink("Back To Product", "Detailed", new { id = Model.Id })
                    }
                </div>
            </div>
        </div>
    </form>

</div>
@section Scripts {
    <script src="~/Scripts/dynamicForms.js" async>
    </script>
    @Scripts.Render("~/bundles/jqueryval")
}
